[{"/Users/zacharyyanez/bootcamp/SayHey/src/index.js":"1","/Users/zacharyyanez/bootcamp/SayHey/src/reportWebVitals.js":"2","/Users/zacharyyanez/bootcamp/SayHey/src/serviceWorkerRegistration.js":"3","/Users/zacharyyanez/bootcamp/SayHey/src/App.js":"4","/Users/zacharyyanez/bootcamp/SayHey/src/components/Main.js":"5","/Users/zacharyyanez/bootcamp/SayHey/src/components/Footer.js":"6","/Users/zacharyyanez/bootcamp/SayHey/src/components/Content.js":"7","/Users/zacharyyanez/bootcamp/SayHey/src/utils/db.js":"8","/Users/zacharyyanez/bootcamp/SayHey/src/components/Presets.js":"9"},{"size":863,"mtime":1610836259002,"results":"10","hashOfConfig":"11"},{"size":364,"mtime":1610833360827,"results":"12","hashOfConfig":"11"},{"size":5064,"mtime":1610833360830,"results":"13","hashOfConfig":"11"},{"size":405,"mtime":1612302295621,"results":"14","hashOfConfig":"11"},{"size":5123,"mtime":1613156787723,"results":"15","hashOfConfig":"11"},{"size":447,"mtime":1613148927222,"results":"16","hashOfConfig":"11"},{"size":172,"mtime":1612156664919,"results":"17","hashOfConfig":"11"},{"size":363,"mtime":1613152803020,"results":"18","hashOfConfig":"11"},{"size":392,"mtime":1612245427625,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"191zpm3",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":2,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/zacharyyanez/bootcamp/SayHey/src/index.js",[],["41","42"],"/Users/zacharyyanez/bootcamp/SayHey/src/reportWebVitals.js",[],"/Users/zacharyyanez/bootcamp/SayHey/src/serviceWorkerRegistration.js",[],"/Users/zacharyyanez/bootcamp/SayHey/src/App.js",["43"],"import React from 'react';\nimport { DBConfig } from './utils/db'\nimport { initDB } from 'react-indexed-db'\nimport { useIndexedDB } from 'react-indexed-db'\nimport './App.css';\nimport Main from './components/Main';\nimport Footer from \"./components/Footer\";\n\n\n\ninitDB(DBConfig);\n\n\nfunction App() {\n\n\n  return (\n    <div className=\"App\">\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/zacharyyanez/bootcamp/SayHey/src/components/Main.js",["44"],"import React from \"react\";\nimport { useIndexedDB } from \"react-indexed-db\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Modal from \"react-bootstrap/Modal\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport { useState, useEffect } from \"react\";\nimport Content from \"./Content\";\n\nexport default function Main() {\n  const { add, getAll, deleteRecord } = useIndexedDB(\"presets\");\n\n  const INITIAL_PRESETS = [\"Hey\"];\n\n  // Message input & preset\n  const [message, setMessage] = useState();\n\n  const [preset, setPreset] = useState(\"\");\n\n  const [presets, setPresets] = useState(INITIAL_PRESETS);\n\n  // catch any presets left in db from previous session on initial render only https://reactjs.org/docs/hooks-effect.html\n  useEffect(() => {\n    // https://www.npmjs.com/package/react-indexed-db#getall\n    getAll().then((presetDbDocument) => {\n      console.log(\"presetDbDocument \", presetDbDocument.message);\n      if (presetDbDocument) {\n        console.log(\"presets found in DB, adding to list: \", presetDbDocument.message);\n        const indexedPresets = presetDbDocument.map((p) => p.message);\n        setPresets([...INITIAL_PRESETS, ...indexedPresets]);\n      }\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function handleChange(e) {\n    e.preventDefault();\n    setMessage(e.target.value);\n    console.log(e.target.value);\n  }\n\n  function handlePreset(e) {\n    setPreset(e.target.value);\n  }\n\n  // Modal\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  // Adds to DB. Called in handlePreset();\n  function AddPresets() {\n    const indexClick = (event) => {\n      add({ message: preset }).then(\n        (event) => {\n          console.log(\"Preset Indexed: \", preset);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n    };\n    indexClick();\n    handleClose();\n\n    // the async-safe way to build upon previous state vals and mitigate overwrite risk https://reactjs.org/docs/hooks-reference.html#functional-updates\n    setPresets((prevPresets) => {\n      const presetsCopy = [...prevPresets];\n      const numberToDelete = 1;\n      const indexOfMessageToDelete = presetsCopy.indexOf(message);\n      presetsCopy.splice(indexOfMessageToDelete, numberToDelete);\n      return presetsCopy;\n    });\n  }\n\n  function DeletePreset(message) {\n    getAll().then((dbRecords) => {\n      for (const record of dbRecords) {\n        if (record.message === message){\n          deleteRecord(record.id).then((event) => {\n            alert(\"Deleted!\")\n          })\n        }}});\n  }\n\n  return (\n    <div>\n      <Navbar bg=\"l\" variant=\"light\" fixed=\"top\">\n        <Navbar.Brand>sayHey</Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <DropdownButton id=\"dropdown-item-button\" title=\"Presets\">\n            <Dropdown.Item onClick={handleShow} type=\"text\" as=\"button\">\n              Add Preset +\n            </Dropdown.Item>\n            <Modal show={show} onHide={handleClose}>\n              <Modal.Header closeButton>\n                <Modal.Title>Add Preset</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <InputGroup className=\"mb-3\">\n                  <FormControl\n                    onChange={handlePreset}\n                    value={this}\n                    placeholder=\"Message\"\n                    aria-label=\"Message Preset\"\n                    aria-describedby=\"basic-addon2\"\n                  />\n                  <InputGroup.Append>\n                    <InputGroup.Text onClick={AddPresets} id=\"basic-addon2\">\n                      Save\n                    </InputGroup.Text>\n                  </InputGroup.Append>\n                </InputGroup>\n              </Modal.Body>\n            </Modal>\n            {/* js in jsx https://reactjs.org/docs/jsx-in-depth.html#javascript-expressions-as-children */}\n            {presets.map((preset) => {\n              \n              return (\n              <Dropdown.Item \n              key={preset} \n              onClick={handleChange} \n              value={preset} \n              type=\"text\" \n              as=\"button\">\n                {preset}\n                <a onClick={() => {\n                  DeletePreset(message);\n                 }} className=\"deleteBtn\" as=\"button\">\n                  x\n                </a>\n              </Dropdown.Item>\n            )})}\n          </DropdownButton>\n        </Nav>\n        <Form inline>\n          <FormControl\n            name=\"message\"\n            type=\"text\"\n            placeholder=\"Message\"\n            value={this}\n            onChange={handleChange}\n            className=\"mr-sm-2\"\n          />\n        </Form>\n      </Navbar>\n      <div className=\"buffer\" />\n      <div className=\"content justify-content-center row\">\n        <Content message={message} />\n      </div>\n    </div>\n  );\n}\n","/Users/zacharyyanez/bootcamp/SayHey/src/components/Footer.js",[],"/Users/zacharyyanez/bootcamp/SayHey/src/components/Content.js",[],"/Users/zacharyyanez/bootcamp/SayHey/src/utils/db.js",[],"/Users/zacharyyanez/bootcamp/SayHey/src/components/Presets.js",["45","46","47"],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":4,"column":10,"nodeType":"54","messageId":"55","endLine":4,"endColumn":22},{"ruleId":"56","severity":1,"message":"57","line":132,"column":17,"nodeType":"58","endLine":134,"endColumn":55},{"ruleId":"52","severity":1,"message":"59","line":9,"column":16,"nodeType":"54","messageId":"55","endLine":9,"endColumn":28},{"ruleId":"60","severity":2,"message":"61","line":9,"column":32,"nodeType":"54","endLine":9,"endColumn":44},{"ruleId":"62","severity":2,"message":"63","line":9,"column":32,"nodeType":"54","messageId":"64","endLine":9,"endColumn":44},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'useIndexedDB' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'deleteRecord' is assigned a value but never used.","react-hooks/rules-of-hooks","React Hook \"useIndexedDB\" is called in function \"handleDelete\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","no-undef","'useIndexedDB' is not defined.","undef","no-global-assign","no-unsafe-negation"]